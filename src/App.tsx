import {useEffect, useState} from "react";
import {Todo} from "./interfaces/Todo.tsx";
import TodoList from "./components/TodoList.tsx";
import TodoForm from "./components/TodoForm.tsx";

function App() {
    // H√†m l·∫•y d·ªØ li·ªáu t·ª´ localStorage ngay t·ª´ khi kh·ªüi t·∫°o state
    const getInitialTodos = (): Todo[] => {
        const savedTodos = localStorage.getItem("todos");
        return savedTodos ? JSON.parse(savedTodos) : [];
    };

    const [todos, setTodos] = useState<Todo[]>(getInitialTodos);

    // L∆∞u d·ªØ li·ªáu v√†o localStorage m·ªói khi danh s√°ch thay ƒë·ªïi
    useEffect(() => {
        localStorage.setItem("todos", JSON.stringify(todos));
    }, [todos]);

    // Th√™m c√¥ng vi·ªác m·ªõi
    const addTodo = (todo: Todo) => {
        setTodos([...todos, todo]);
    };

    // X√≥a c√¥ng vi·ªác
    const deleteTodo = (id: string) => {
        setTodos(todos.filter(todo => todo.id !== id));
    }

    // Chuy·ªÉn tr·∫°ng th√°i ho√†n th√†nh
    const toggleComplete = (id: string) => {
        const todosNew: Todo[] = todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo);
        setTodos(todosNew);
    }

    return (
        <div className="app">
            <h1>üìù To-Do List</h1>
            <TodoForm addTodo={addTodo}/>
            <TodoList todos={todos} deleteTodo={deleteTodo} toggleComplete={toggleComplete}/>
        </div>
    );
}

export default App;